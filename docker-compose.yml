# docker-compose file for running paperless from the Docker Hub.
# This file contains everything paperless needs to run.
# Paperless supports amd64, arm and arm64 hardware.
#
# All compose files of paperless configure paperless in the following way:
#
# - Paperless is (re)started on system boot, if it was running before shutdown.
# - Docker volumes for storing data are managed by Docker.
# - Folders for importing and exporting files are created in the same directory
#   as this file and mounted to the correct folders inside the container.
# - Paperless listens on port 8000.
#
# In addition to that, this docker-compose file adds the following optional
# configurations:
#
# - Instead of SQLite (default), PostgreSQL is used as the database server.
# - Apache Tika and Gotenberg servers are started with paperless and paperless
#   is configured to use these services. These provide support for consuming
#   Office documents (Word, Excel, Power Point and their LibreOffice counter-
#   parts.
#
# To install and update paperless with this file, do the following:
#
# - Copy this file as 'docker-compose.yml' and the files 'docker-compose.env'
#   and '.env' into a folder.
# - Run 'docker-compose pull'.
# - Run 'docker-compose run --rm webserver createsuperuser' to create a user.
# - Run 'docker-compose up -d'.
#
# For more extensive installation and update instructions, refer to the
# documentation.

version: "3.7"

services:
  diun:
    image: crazymax/diun:latest
    container_name: diun
    hostname: diun-oluhome-04-paperless
    command: serve
    environment:
      - TZ=${TZ}
      - LOG_LEVEL=info
      - LOG_JSON=false
    volumes:
      - ${APPDATA_BASE}/diun:/data
      - ${APPDATA_BASE}/diun/diun.yml:/diun.yml:ro
      - /var/run/docker.sock:/var/run/docker.sock
    labels:
      - "diun.enable=true"
    restart: always

  broker:
    image: redis:6.0
    container_name: paperless-broker
    restart: unless-stopped

  db:
    image: postgres:13
    container_name: paperless-db
    restart: unless-stopped
    user: ${PUID}:${PGID}
    volumes:
      - ${APPDATA_BASE}/db_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: paperless
      POSTGRES_USER: paperless
      POSTGRES_PASSWORD: paperless
    labels:
      - "diun.enable=true"

  webserver:
    image: jonaswinkler/paperless-ng:latest
    container_name: paperless-web
    restart: unless-stopped
    depends_on:
      - db
      - broker
      - gotenberg
      - tika
    ports:
      - 8000:8000
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000"]
      interval: 30s
      timeout: 10s
      retries: 5
    volumes:
      - ${APPDATA_BASE}/paperless-data:/usr/src/paperless/data
      - ${APPDATA_BASE}/paperless-media:/usr/src/paperless/media
      - ${PAPERLESS_EXPORTS_DIR}:/usr/src/paperless/export
      - ${PAPERLESS_CONSUME_DIR}:/usr/src/paperless/consume
    env_file: docker-compose.env
    environment:
      PAPERLESS_REDIS: redis://broker:6379
      PAPERLESS_DBHOST: db
      PAPERLESS_TIKA_ENABLED: 1
      PAPERLESS_TIKA_GOTENBERG_ENDPOINT: http://gotenberg:3000
      PAPERLESS_TIKA_ENDPOINT: http://tika:9998
    labels:
      - "diun.enable=true"

  gotenberg:
    image: thecodingmachine/gotenberg
    container_name: paperless-gotenberg
    restart: unless-stopped
    environment:
      DISABLE_GOOGLE_CHROME: 1
    labels:
      - "diun.enable=true"

  tika:
    image: apache/tika
    container_name: paperless-tika
    restart: unless-stopped
    labels:
      - "diun.enable=true"